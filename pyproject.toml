[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "consciousness"
version = "0.1.0"
description = "House Consciousness System with SAFLA Model"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["consciousness", "iot", "safla", "home-automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "aiosqlite>=0.19.0",
    "pydantic>=2.4.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "httpx>=0.25.0",
    "websockets>=12.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "schedule>=1.2.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "aiofiles>=23.2.1",
    "jinja2>=3.1.2",
    "pyyaml>=6.0.1",
    "cryptography>=41.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.4.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
    "faker>=19.12.0",
    "psutil>=5.9.0",
    "locust>=2.15.0",
    "playwright>=1.36.0",
    "websockets>=11.0.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
    "faker>=19.12.0",
    "psutil>=5.9.0",
    "locust>=2.15.0",
    "playwright>=1.36.0",
    "websockets>=11.0.0",
]

performance = [
    "locust>=2.15.0",
    "psutil>=5.9.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
]

security = [
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "semgrep>=1.0.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[project.scripts]
consciousness = "consciousness.main:main"
consciousness-dev = "consciousness.dev:main"
consciousness-migrate = "consciousness.database:migrate"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=consciousness",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--timeout=300",
    "-v",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "digital_twin: Digital twin tests",
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow tests (>5 seconds)",
    "external: Tests requiring external services",
    "load: Load testing",
    "stress: Stress testing",
    "memory: Memory testing",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
# Minimum coverage thresholds
# These can be enforced with pytest-cov
minversion = "7.0"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.pants.d
  | \.pyc
  | \.pyo
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["consciousness"]

[tool.hatch.build.targets.wheel]
packages = ["consciousness"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "openai.*",
    "anthropic.*",
    "schedule.*",
    "celery.*",
    "redis.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "black>=25.1.0",
    "factory-boy>=3.3.3",
    "faker>=37.4.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.29.1",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
]
